PM知道我们这个改动吗? /Does PM know about our changes?
我在这里加了一个判断，如果是waterfall layout，就不会进入这个逻辑。/I added a judgment here. If it is a waterfall layout, it will not enter this logic.
We're in the process of upgrading the msnews repository to use typescript 5.3.3. I'd appreciate your help reviewing and smoke testing your canvas to avoid major breaks. You can take a look at the changes in the following PR. /我们正在升级msnews存储库以使用typescript 5.3.3。我希望你能帮忙审查和烟雾测试你的画布，以避免重大破坏。你可以在以下PR中查看更改。
resize的时候因为layout显示不出来导致riversentinel会一直出现在视窗中，从而不停地请求feed data. waterfall中的card数据不停增大。resize的时候，有是全部card都render出来，导致广告卡的请求变多。/When resizing, because the layout is not displayed, the riversentinel will always appear in the viewport, resulting in continuous request for feed data. The card data in the waterfall keeps increasing. When resizing, all cards are rendered, resulting in more requests for ad cards.
我看到column数据中加了一些section traker的数据，他们是用将card划分成一个一个section的吗，但是我看render的时候，并不是一个section一个section的render，还是所有card一起render的，这样是如何做到减少了广告的请求呢？ /I saw that some section tracker data was added to the column data. Are they used to divide the card into sections? But when I look at the render, it's not rendering section by section, but all the cards are rendered together. How does this reduce the number of ad requests?
Hi A，关于上午你提到的那个apperror我已经找到根因了Ad用的那个performanceEntries 是有数量限制的，当AD那个请求之前有超过250条记录。就记不到了，所以读的时候会报appError。本地更容易复现可能是因为本地build config 是单独请求的所以占用了更多的budget。感觉好的解决方式是Ad不依赖这个方式记录performance或者用performance.setResourceTimingBufferSize(500)  调大budget。/Hi A, I have found the root cause of the apperror you mentioned this morning. The performanceEntries used by Ad have a limit on the number of records. When there are more than 250 records before the request of AD, it will not be recorded, so it will report appError when reading. It is easier to reproduce locally because the local build config is requested separately, so it occupies more budget. It seems that a good solution is that Ad does not rely on this method to record performance or use performance.setResourceTimingBufferSize(500) to increase the budget.
所以除了这里已经处理过的AppError以外剩下的appError我们都可以挑选去分析，而不会造成重复工作。/So we can choose to analyze the remaining appErrors, which will not cause duplicate work, in addition to the appErrors that have been processed here.
在experiment里填写flight，相当于新建这个flight，所以显示已经被占用了，我建了一个ticket，在问是否可以在新的experiment中使用已经得flight。/Fill in the flight id in the experiment, which is equivalent to creating the flight id, so it shows that it has been occupied. I will build a ticket to ask if the flight id could be reused in a new experiment.
现在是有些card当数据不全的时候，返回null 或者直接抛异常，有些card返回emptydata，有数据结构，但是内容空。这2种情况的结果是一样的，都是feedData里不插入这张卡的数据。/Now, when some cards don't have a valid data, they return null or throw exceptions directly, and some cards return emptydata, which have data structures, but the content is empty. The results of these two situations are the same, and the data of this card is not inserted in feedData.
不是特别懂这里，如果 hide story card了， 不就直接 throw error，不显示内容了？/I don't quite understand here. If story card is hidden, it will throw an error and not display the content, right?
感谢大家来参与讨论，并分享了很多很好的idea，我稍后会将我们的讨论结果总结一下发到群里。 /Thank you all for participating in the discussion and sharing a lot of good ideas. I will summarize our discussion results and send them to the group later.
我们删除了basecardData中通用的属性（例如gridArea，wpoMetadata）的传递，这些属性将在buildFeedData函数中统一添加。/We deleted the passing of common properties (such as gridArea, wpoMetadata) in basecardData, and these properties will be added uniformly in the buildFeedData function.
所有的这些属性，都是columnCardData中的通用属性，这些通用属性都会在buildFeedData函数中统一添加。/All of these properties are common properties in columnCardData, and these common properties will be added uniformly in the buildFeedData function.
mapExtraColumnCardData function用了传递非通用属性的构建方法，这里生成的属性为不同data mapper 所需的特有的数据。通用数据无需传递，buildFeedData函数中会统一添加。/The mapExtraColumnCardData function uses the construction method of passing non-common properties. The properties generated here are specific data required by different data mappers. Common data does not need to be passed, and will be added uniformly in the buildFeedData function.
we created a new function called buildFeedData, which is used to build the feedData. It has 4 parameters: cardInfo( all card related data), baseCardData(used to fill in defaultLayout), mapExtraColumnCardData(function used to generate data to fill in columnCardData),isLazyLoad(whether it is lazy load). /我们创建了一个新的函数buildFeedData，用于构建feedData。它有4个参数：cardInfo（所有卡片相关数据），baseCardData（用于填充defaultLayout），mapExtraColumnCardData（用于生成填充columnCardData的数据的函数），isLazyLoad（是否是lazy load）。
对于每个dataMapper来说，所传递的baseCardData只需要包含各自的特殊属性，如id等，通用属性不需要添加，buildFeedData函数中会统一添加。/For each dataMapper, the passed baseCardData only needs to contain its own special properties, such as id, etc., and common properties do not need to be added, which will be added uniformly in the buildFeedData function.
好的，我从今天开始会先去了解一下任务细则，然后跟stan一起估计一下任务量，然后再和你们讨论一下。/Okay, I'll start to learn about the task details from today, then estimate the task volume with stan, and then discuss with you.
Hi, B，你们那边有没有哪个同事对prong2了解多一些的。我们后面有个task是做prong2上的waterfall layout, 想了解一下prong2上有没有啥要注意的点。比如prong2上都有哪些window size. 2 columns , right rail什么的，还有prong2上数据请求的方式好像也不一样，是background request? 我和Stan想找个人了解一下。/Hi, B, do you have any colleagues who know more about prong2? We have a task to do the waterfall layout on prong2. I want to know if there is anything to pay attention to on prong2. For example, what are the window sizes on prong2. 2 columns, right rail, etc. It seems that the way of data request on prong2 is also different. Is it background request? Stan and I want to find someone to understand.
选出一个人来主导这个任务，负责跟其他team沟通，然后把这个任务拆分成小任务，分配给其他人。/Choose one person to lead this task, be responsible for communicating with other teams, and then split this task into small tasks and assign them to others.
这个倒不是特别为减小bundle size准备的，我最近在做feed3.0相关的工作。这改变主要是为了之后方便datamapper统一转换成feed3.0的数据结构。/This is not particularly prepared to reduce the bundle size. I have been working on feed3.0 recently. This change is mainly to facilitate the datamapper to convert to the feed3.0 data structure in the future.
当然减少了bundle sizes我也是很开心的。/Of course, I'm also very happy to reduce the bundle sizes.
谢谢你对它的赞赏。我们也在考虑有什么方式能继续优化这里，如果有什么好的想法，欢迎提出。/Thank you for your appreciation. We are also considering ways to continue to optimize here. If you have any good ideas, please feel free to put them forward.
code 已经checed in, 值得高兴的是，我们减少了一些bundle size。/Code has been checked in. It is worth mentioning that we have reduced some bundle sizes.
As it impacts many canvases did we get sign off different canvases?/由于它影响了很多canvas，我们是否得到了不同canvas的签名？
这是我最近提交的PR的一些更改。/These are some changes to the PR I submitted recently.
提醒sd card owner我们对大部分card都进行了refactor, 涉及到的卡片在下面这个excel表中。如果你的卡片的datamapper出现了问题，请及时通知我。如果你的卡片未在列表中，你可以自行按照其他卡片的修改方式进行修改。同时提醒各个canvas的owner，可以帮忙测试你的canvas上是否显示正常。有问题及时提醒我。/Remind sd card owner that we have refactored most of the cards, and the cards involved are in the following excel table. If there is a problem with your card's datamapper, please inform me in time. If your card is not in the list, you can modify it according to the modification method of other cards. At the same time, remind the owner of each canvas that you can help test whether your canvas is displayed normally. If there is a problem, please inform me in time.
我们这次的refactor，主要是为了统一各个card data mapper中通用属性的转换方式，这改变主要是为了之后方便datamapper统一转换成feed3.0的数据结构。/Our refactoring this time is mainly to unify the conversion method of common properties in various card data mappers. This change is mainly to facilitate the datamapper to convert to the feed3.0 data structure in the future.
很高兴这次的改动减小了bundle size。/I'm glad this change has reduced the bundle size.
我的测试一直因为一些网络资源加载问题导致一直失败，有没有人能帮忙看下这个问题？/My test has been failing due to some network resource loading problems. Can anyone help me with this problem?
这是一个临时的解决方案用与满足data mapper的构建条件，NTP也是用同样的方法构建的CardSlot数据，从而用来计算cardSize的值。当前data mapper还对不支持waterfall，所以这里用grid下C1的layout当模拟waterfall layout。/This is a temporary solution to meet the construction conditions of data mapper. NTP also uses the same method to construct CardSlot data, so as to calculate the value of cardSize. The current data mapper does not support waterfall, so the layout of C1 under grid is used as a simulation of waterfall layout.
在ntp上，waterfall跟response card template是捆绑关系。 也就是ad card很content card会在之后的代码中被替换成response card。所以NTP只做了infopane的转写也不会有问题。也就是上widecard那部分。/On ntp, waterfall is bundled with response card template. That is, ad card and content card will be replaced by response card in the subsequent code. So it's OK for NTP to do only infopane transcription. That is, the part of widecard.
对于web-content-card和content-card。我不确定NTP中有没有用到，但是这么写上是更保险的做法。/For web-content-card and content-card. I'm not sure if it's used in NTP, but it's safer to write it like this.
简化了写法，强制转换infopane的template。/Simplified the writing and forced the conversion of infopane template.
我们做这个更改，是因为prong2上的infopane在columns内需要循环遍历才能找到。/We made this change because the infopane on prong2 needs to be looped through the columns to find it.
Regarding the comment you made about the increased computation time, are you referring to the absence of the infopane in the layout when the second call occurs? Despite the lack of an infopane, we still proceed with the conversion, resulting in a potential increase in computation. I reviewed the TegCreatorFactory.getViewTemplate function and observed that it incorporates a caching mechanism, mitigating the overall computational impact./关于你对增加计算时间的评论，你是指第二次调用时布局中没有infopane吗？尽管没有infopane，我们仍然会继续转换，导致潜在的计算增加。我回顾了TegCreatorFactory.getViewTemplate函数，并观察到它包含了一个缓存机制，从而减轻了整体的计算影响。
On another note, when you suggested performing the conversion in Feedmanager, does that imply a modification to the template for the Topstories card prong2 to directly utilize cs-infopane? While this may appear to be the optimal solution, we anticipate the need for additional time to thoroughly test it and ensure its compatibility with all scenarios. /另外，当你建议在Feedmanager中执行转换时，是否意味着修改Topstories card prong2的模板，以直接使用cs-infopane？虽然这看起来是最佳解决方案，但我们预计需要额外的时间来彻底测试它，并确保它与所有场景的兼容性。
上面这个请求是我模拟了前端没有watefall layout的时候，后端在waterfall实验中时的请求。现在有个问题就是在表格中，这种情况应该后端应该返回给我一个fallback的layout，但是现在返回的是一个仍然是column based layout。麻烦看一下呢？/The above request is that I simulated the request when the front end does not have watefall layout and the back end is in the waterfall experiment. Now there is a problem that in the table, the back end should return me a fallback layout in this case, but now it returns a column based layout. Could you please take a look at it?
而且我还想问下这个表格中的信息，是否是准确的。现在wpo端已经按照这个表格中的方案ship了改动吗？/And I also want to ask if the information in this table is accurate. Now the wpo side has shipped the changes according to the scheme in this table?
hi，xx, 我整理了一下前端对应fight mismatch 处理的逻辑关系，请帮忙确实红框中的请求QSP跟response的一致性。/Hi, xx, I sorted out the logic relationship of the front-end corresponding to the fight mismatch processing. Please help to confirm the consistency of the request QSP and response in the red box.
这个问题现在有点block我们做端对端的测试。/This problem is a bit blocking us from doing end-to-end testing now.
黄色底色的是前端会真实触发的请求参数, 白色底色非前端正常逻辑。/The yellow background is the request parameters that the front end will actually trigger, and the white background is not the normal logic of the front end.
H1时期，我做的CoreUX相关的工作。1，实验Segoe UI Variable Font，2，实验Hover card时的文字变色，卡片加边框的效果，3 实验各种卡片字体，4. 实验并ship了reduce top margin of header. /During H1, I did some work related to CoreUX. 1. Experiment with Segoe UI Variable Font, 2. Experiment with text color change when Hover card, and add border effect to card, 3. Experiment with various card fonts, 4. Experiment with and ship reduce top margin of header.
前端不会做转换，而是重新请求数据，我现在测试的是这条链路没有问题。/The front end will not do the conversion, but re-request the data. What I'm testing now is that there is no problem with this link.
现在wpo那边是通过什么判断是second call的？/How does wpo determine that it is a second call now?
那我可以改下这个图上C1的QSP信息，我这里加上nesSkip主要想说明是second call。/Then I can change the QSP information of C1 in this figure. I mainly want to show that it is a second call by adding nesSkip here.
现在C1的情况在WPO还是不支持的吗，这个也会在明天的PR中一起支持吗？/Is C1 still not supported in WPO now? Will this also be supported in tomorrow's PR?
我有什么最简单的方式判断是否是template-based response吗, 还是说我只能通过找到river中的subsection里的template来判断？/Is there any simplest way for me to judge whether it is a template-based response, or can I only judge it by finding the template in the subsection of the river?
或许用requestedColumnCount判断是否是column-based response更好？/Maybe it's better to judge whether it's a column-based response by using requestedColumnCount?
我更新了图表，红色字体标注的是我们发现的wpo存在的bug, q请注意。黑色的部分是前端准备实施的方案。划掉的部分是备选方案。/I updated the chart. The red font indicates the bug we found in wpo. Q please note. The black part is the scheme prepared by the front end. The crossed out part is the alternative scheme.
handle以下场景，当前端准备渲染waterfall layout但是后端返回了template-based response。或者前端准备渲染Grid layout但是后端返回了column-based response。/Handle the following scenarios, when the front end is ready to render the waterfall layout, but the back end returns the template-based response. Or when the front end is ready to render the Grid layout, but the back end returns the column-based response.
稍微改了一点，因为2中情况都得发apperror. /I changed it a little bit, because both cases 2 need to send apperror.
目前这种情况下，前端是不支持waterfall layout的，所以我们应该可以忽略这种情况。/At present, the front end does not support waterfall layout in this case, so we should be able to ignore this case.
前端后端都不支持非rail模式的waterall layout，我们可以用现有的tmpl RailMode=0来过滤掉这种情况。/Neither the front end nor the back end supports the waterfall layout of non rail mode. We can use the existing tmpl RailMode = 0 to filter out this situation.
这个id我在哪里都没有用到，你可以直接拿去用。/I haven't used this ID anywhere. You can use it directly.
可以这样写的，因为当cardsize 是1 的时候 ，不会进入这个逻辑。/You can write it like this, because when cardsize is 1, it will not enter this logic.
我们是否能在最外层先判断waterfall来简化逻辑呢？/Can we simplify the logic by judging the waterfall at the outermost layer?
调整装饰展示所需的页面宽度。/Adjust the page width required for decoration display.
你是从何得知我们team的，你对我们team工作感兴趣的点在哪里？你目前已经了解了一些我们team的工作内容吗？/How did you know about our team? What are the points of interest in our team's work? Have you already understood some of the work of our team?
我如何联系你的朋友，或者说她会来联系我吗？/How can I contact your friend, or will she contact me?
我在组里主要是负责前端的工作，是在peregrine上工作的，不知道你听说过没有。我们在peregrine上做的是coreUx相关的工作，就是跨canvas的一些shared组件的开发，例如search box，header, 现在正在进行的是feed3.0的开发。/I am mainly responsible for the front-end work in the team, and I work on peregrine. I don't know if you have heard of it. What we do on peregrine is coreUx-related work, which is the development of some shared components across canvases, such as search box, header. Now we are developing feed3.0.
周中的早上我们通常有晨会，这是用来跟美国的team进行沟通的，通常是PM和那边的dev manager来参加。他们会assign一些work item给我们。我们也会同步最新的工作进展在会上。也会讨论一些工作中遇到的问题。或者有需要帮助的地方。/We usually have a morning meeting in the middle of the week, which is used to communicate with the team in the United States. Usually, the PM and the dev manager over there will attend. They will assign some work items to us. We will also synchronize the latest work progress at the meeting. We will also discuss some problems encountered in the work. Or where help is needed.
每周还会有一两个周会，这个会是我们team内部的，主要是用来review我们这周的工作进展，讨论一些问题，或者分享一些经验。/There is also a weekly meeting, which is internal to our team. It is mainly used to review the progress of our work this week, discuss some problems, or share some experience.
关于Abug，我找到了根因，是由xx这个提交引入的。每当我们Switch pivot的时候，都会重新new 一个feedManager，因此，切换pivot后，这段代码中的this.layout是undefined，导致每次切换后都用按照已经记录下来的SSR的layout size作为当前页面的size。而且切换后又不会再有afterHydration的event 来correct layoutsize。导致这个bug。/Regarding Abug, I found the root cause, which was introduced by the submission of xx. Every time we Switch pivot, we will re-new a feedManager, so after switching pivot, this.layout in this code is undefined, which causes the layout size recorded by SSR to be used as the current page size every time after switching to waterfall. And after switching, there will be no afterHydration event to correct the layout size, which causes this bug.
我想到的解决方案就是在switch pivot的时候，记录在全局变量中当前是一个switch，然后updateLayout的时候，增加对这个变量的判断。当然，使用全局变量不是最好的解决方案，或许你们能帮忙想到更好的解决方案。/The solution I thought of is to record that it is a switch in a global variable when switching pivot, and then add a judgment of this variable when updateLayout. Of course, using a global variable is not the best solution, maybe you can help think of a better solution.
waterfall实验中appError减小的原因是一个6天前新增的feature，导致的，这个function只在control下触发了。/The reason for the reduction of appError in the waterfall experiment is a feature added 6 days ago, which caused this function to be triggered only under control.
经过一天的调查，我没有发现能复现这个问题的步骤，code我也review了一遍，没有发现问题。/After a day of investigation, I did not find any steps to reproduce this problem, and I reviewed the code and did not find any problems.
从数据上，差距比较大的卡类型就是article card。/From the data, the card type with the largest gap is the article card.
这个错误报错的原因就是卡片渲染成功后，有没有触发visualReadinessCallback。如果某个cards没有触发这个，当页面关闭的时候,就会报一个appError。/The reason for this error is that after the card is rendered successfully, the visualReadinessCallback is not triggered. If a card does not trigger this, an appError will be reported when the page is closed.
选择你能参加我们wmc午餐会的日期，可多选。/Choose the date you are available to attend our wmc lunch meeting, multiple choices are allowed.
